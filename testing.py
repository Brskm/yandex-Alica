from flask import Flask
from flask import request
import json
import random


app = Flask(__name__)

# –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–≥—Ä—ã
spis_word = ["–ì–æ—Ä–∏–ª–ª–∞", "–ß–µ–ª–æ–≤–µ–∫", "–í—Ä–µ–º—è", "–ñ–∏–∑–Ω—å", "–í–æ–ø—Ä–æ—Å", "–†–µ–±–µ–Ω–æ–∫", "–ö–æ–Ω–µ—Ü", "–°–∏—Å—Ç–µ–º–∞", "–ù–∞—á–∞–ª–æ"]
sims = ['–∞', '–±', '–≤', '–≥', '–¥', '–µ', '—ë', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ',
        '—Ö', '—Ü', '—á', '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è']
word = random.choice(spis_word)
finish = True
used_sims = []
kolvo = 0


@app.route('/post', methods=['POST'])
def handler():

    with open('file.json', 'w') as file:
        json.dump(request.json, file)

    response = {
        'session': request.json['session'],
        'version': request.json['version'],
        'response': {
            'end_session': False
        }
    }
    handle_dialog(response, request.json)
    return response

def handle_dialog(resp, reqst, context=True):
    # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if reqst['request']['original_utterance']:
        resp['response']['text'] = game()
        if context is False:
            resp['response']['end_session'] = True
    else:
        # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ —ç—Ç–æ–≥–æ –Ω–µ –±—ã–ª–æ
        resp['response']['text'] = '–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –≤–∏—Å–µ–ª–∏—Ü—É —Å –≥–æ—Ä–æ–¥–∞–º–∏.' \
                                   '–Ø –∑–∞–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ, –º–æ–∂–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å. –ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ "—è —Å–¥–∞—é—Å—å"'


def game():
    # –¥–æ–ª–±–∞–Ω—ã–µ –≥–ª–æ–±–∞–ª—ã
    global finish, kolvo

    def num_sims(wordd, simm):
        wordd = wordd.lower()
        number = wordd.count(simm)
        res = []
        sp_word = [a for a in wordd]
        for i in range(number):
            indexx = sp_word.index(simm) + i
            res.append(indexx)
            del sp_word[indexx - i]
        return res

    def vis(form, lis_t, simv):
        form = [a for a in form]
        for i in range(len(lis_t)):
            form[lis_t[i]] = simv
        return ''.join(form)

    frm = "".ljust(len(word), "_")
    while finish:
        sim = request.json["request"]["command"]
        if sim.lower() == '—è —Å–¥–∞—é—Å—å':
            finish = False
            return (f"–ñ–∞–ª—å...:( –Ø –∑–∞–≥–∞–¥—ã–≤–∞–ª–∞ —Å–ª–æ–≤–æ '{word}'", False)

        elif sim.lower() == word.lower():
            finish = False
            return ("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!! –¢—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ. –ü–æ–ª—É—á–∏ –ø–æ–¥–∞—Ä–æ–∫ - üéÅ", False)

        elif sim in used_sims:
            return "–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª"
        elif sim.lower() in sims:
            if sim.lower() in word.lower():
                kolvo = 0
                spis = num_sims(word, sim.lower())
                frm = vis(frm, spis, sim)
                used_sims.append(sim.lower())
                if "_" not in frm:
                    finish = False
                    return (f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!! –Ø –∑–∞–≥–∞–¥—ã–≤–∞–ª–∞ —Å–ª–æ–≤–æ '{word}' –ü–æ–ª—É—á–∏ –ø–æ–¥–∞—Ä–æ–∫ - üéÅ", False)

                else:
                    return (frm)
            else:
                if kolvo == 3:
                    finish = False
                    return (f"–í—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞–∑ :) –Ø –∑–∞–≥–∞–¥—ã–≤–∞–ª–∞ —Å–ª–æ–≤–æ '{word}'.", False)

                else:
                    used_sims.append(sim.lower())
                    kolvo += 1
                    return ("–≠—Ç–æ–π –±—É–∫–≤—ã –Ω–µ—Ç –≤ —Å–ª–æ–≤–µ :( –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ ")

        else:
            return ('–û–®–ò–ë–ö–ê!! –í–≤–µ–¥–∏—Ç–µ –û–î–ù–£ –±—É–∫–≤—É –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ')




if __name__ == '__main__':
    app.run()
